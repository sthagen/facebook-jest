aliases:
  - &restore-cache
    keys:
      - v2-dependencies-{{ .Branch }}-{{ checksum "yarn.lock" }}
      # Fallback in case checksum fails
      - v2-dependencies-{{ .Branch }}-

  - &save-cache
    paths:
      - node_modules
      - website/node_modules
    key: v2-dependencies-{{ .Branch }}-{{ checksum "yarn.lock" }}

  - &filter-ignore-gh-pages
    branches:
      ignore: gh-pages
  - &install yarn install-no-ts-build

version: 2
jobs:
  test-node-8:
    working_directory: ~/jest
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - run:
          command: yarn remove-prettier-dep
      - restore-cache: *restore-cache
      - run: *install
      - save-cache: *save-cache
      - run:
          command: yarn test-ci-partial
      - store_test_results:
          path: reports/junit

  test-node-10:
    working_directory: ~/jest
    docker:
      - image: circleci/node:10
    steps:
      - checkout
      - restore-cache: *restore-cache
      - run: *install
      - save-cache: *save-cache
      - run:
          command: yarn test-ci-partial
      - store_test_results:
          path: reports/junit

  test-jest-circus:
    working_directory: ~/jest
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - restore-cache: *restore-cache
      - run: *install
      - save-cache: *save-cache
      - run:
          command: JEST_CIRCUS=1 yarn test-ci-partial
      - store_test_results:
          path: reports/junit

  test-node-12:
    working_directory: ~/jest
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - restore-cache: *restore-cache
      - run: *install
      - save-cache: *save-cache
      - run:
          command: yarn test-ci
      - store_test_results:
          path: reports/junit

  test-node-13:
    working_directory: ~/jest
    docker:
      - image: circleci/node:13
    steps:
      - checkout
      - restore-cache: *restore-cache
      - run: *install
      - save-cache: *save-cache
      - run:
          command: yarn test-ci-partial
      - store_test_results:
          path: reports/junit

  test-node-14:
    working_directory: ~/jest
    docker:
      - image: circleci/node:14
    steps:
      - checkout
      - restore-cache: *restore-cache
      - run: *install
      - save-cache: *save-cache
      - run:
          command: yarn test-ci-partial
      - store_test_results:
          path: reports/junit

  test-browser:
    working_directory: ~/jest
    docker:
      - image: circleci/node:12-browsers
    steps:
      - checkout
      - restore-cache: *restore-cache
      - run: *install
      - save-cache: *save-cache
      - run: yarn test-ci-es5-build-in-browser

  test-or-deploy-website:
    working_directory: ~/jest
    docker:
      - image: circleci/node:12
    resource_class: large
    steps:
      - checkout
      - restore-cache: *restore-cache
      - run: *install
      - save-cache: *save-cache
      - run:
          name: Test or Deploy Jest Website
          command: ./.circleci/website.sh

# Workflows enables us to run multiple jobs in parallel
workflows:
  version: 2
  build-and-deploy:
    jobs:
      - test-node-8
      - test-node-10
      - test-node-12
      - test-node-13
      - test-node-14 # current
      - test-jest-circus
      - test-browser
      - test-or-deploy-website:
          filters: *filter-ignore-gh-pages
