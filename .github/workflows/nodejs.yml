name: Node CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '**'

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  prepare-yarn-cache:
    name: Prepare yarn cache
    strategy:
      fail-fast: false
      matrix:
        # for some reason the Windows cache doesn't work
        os: [ubuntu-latest, macOS-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: yarn

      - name: Validate cache
        env:
          # Use PnP and disable postinstall scripts as this just needs to
          # populate the cache for the other jobs
          YARN_NODE_LINKER: pnp
          YARN_ENABLE_SCRIPTS: false
        run: yarn --immutable

  typecheck:
    name: Running TypeScript compiler
    runs-on: ubuntu-latest
    needs: prepare-yarn-cache

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: yarn
      - name: install
        run: yarn --immutable
      - name: build
        run: yarn build
      - name: test typings
        run: yarn test-types
      - name: verify TypeScript@4.3 compatibility
        run: yarn verify-old-ts

  lint:
    name: Running Lint
    runs-on: ubuntu-latest
    needs: prepare-yarn-cache

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: yarn
      - name: install
        run: yarn --immutable
      - name: build
        run: yarn build:js
      - name: verify Yarn PnP compatibility
        run: yarn verify-pnp
      - name: run eslint
        run: yarn lint
      - name: run prettier
        run: yarn lint:prettier:ci
      - name: check copyright headers
        run: yarn check-copyright-headers

  yarn-validate:
    name: Validate Yarn dependencies and constraints
    runs-on: ubuntu-latest
    needs: prepare-yarn-cache
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: yarn
      - name: 'Check for unmet constraints (fix w/ "yarn constraints --fix")'
        run: yarn constraints
      - name: 'Check for duplicate dependencies (fix w/ "yarn dedupe")'
        run: yarn dedupe --check

  test:
    name: Node v${{ matrix.node-version }} on ${{ matrix.os }} (${{ matrix.shard }})
    strategy:
      fail-fast: false
      matrix:
        node-version: [12.x, 14.x, 16.x, 17.x, 18.x]
        os: [ubuntu-latest, macOS-latest, windows-latest]
        shard: ['1/4', '2/4', '3/4', '4/4']
    runs-on: ${{ matrix.os }}
    needs: prepare-yarn-cache

    steps:
      - name: Set git config
        shell: bash
        run: git config --global core.symlinks true
        if: runner.os == 'Windows'
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: yarn
      - name: install
        run: yarn --immutable
      - name: build
        run: yarn build:js
      - name: Get number of CPU cores
        id: cpu-cores
        uses: SimenB/github-actions-cpu-cores@v1
      - name: run tests
        run: yarn test-ci-partial:parallel --max-workers ${{ steps.cpu-cores.outputs.count }} --shard=${{ matrix.shard }}

  test-jasmine:
    name: Node LTS on ${{ matrix.os }} using jest-jasmine2 (${{ matrix.shard }})
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        shard: ['1/4', '2/4', '3/4', '4/4']
    runs-on: ${{ matrix.os }}
    needs: prepare-yarn-cache

    steps:
      - name: Set git config
        shell: bash
        run: git config --global core.symlinks true
        if: runner.os == 'Windows'
      - uses: actions/checkout@v3
      - name: Use Node.js LTS
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: yarn
      - name: install
        run: yarn --immutable
      - name: build
        run: yarn build:js
      - name: Get number of CPU cores
        id: cpu-cores
        uses: SimenB/github-actions-cpu-cores@v1
      - name: run tests using jest-jasmine
        run: yarn jest-jasmine-ci --max-workers ${{ steps.cpu-cores.outputs.count }} --shard=${{ matrix.shard }}

  test-coverage:
    name: Node LTS on Ubuntu with coverage (${{ matrix.shard }})
    strategy:
      fail-fast: false
      matrix:
        shard: ['1/4', '2/4', '3/4', '4/4']
    runs-on: ubuntu-latest
    needs: prepare-yarn-cache

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js LTS
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: yarn
      - name: install
        run: yarn --immutable
      - name: build
        run: yarn build:js
      - name: Get number of CPU cores
        id: cpu-cores
        uses: SimenB/github-actions-cpu-cores@v1
      - name: run tests with coverage
        run: |
          yarn jest-coverage --color --config jest.config.ci.mjs --max-workers ${{ steps.cpu-cores.outputs.count }} --shard=${{ matrix.shard }}
          yarn test-leak
      - name: map coverage
        run: node ./scripts/mapCoverage.mjs
        if: always()
      - uses: codecov/codecov-action@v3
        if: always()
        with:
          directory: ./coverage
